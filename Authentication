npm init -y
npm install express passport passport-local

const express = require('express');
const passport = require('passport');
const LocalStrategy = require('passport-local').Strategy;

const app = express();
const PORT = 3000;

// Dummy users (username and password stored in plain text for simplicity)
const users = [{ username: 'user1', password: 'password123' }];

// Middleware to parse JSON request body
app.use(express.json());

// Passport local strategy for username/password authentication
passport.use(new LocalStrategy((username, password, done) => {
  const user = users.find(u => u.username === username);
  if (!user) return done(null, false, { message: 'User not found' });
  
  if (user.password !== password) {
    return done(null, false, { message: 'Invalid password' });
  }
  
  return done(null, user);
}));

// Initialize Passport
app.use(passport.initialize());

// Login route (POST method) - authenticate user
app.post('/login', passport.authenticate('local', { session: false }), (req, res) => {
  res.json({ message: 'Login successful', user: req.user });
});

// Protected route (GET method) - only accessible if authenticated
app.get('/protected', (req, res) => {
  const { username, password } = req.query;

  const user = users.find(u => u.username === username && u.password === password);
  
  if (user) {
    res.json({ message: 'Protected route accessed', user });
  } else {
    res.status(403).json({ message: 'Forbidden: Invalid credentials' });
  }
});

// Start the server
app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});


http://localhost:3000/protected?username=user1&password=password123
